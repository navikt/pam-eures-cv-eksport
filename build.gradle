plugins {
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
    id "org.jetbrains.kotlin.plugin.spring" version "1.7.10"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.7.10"
    id "application"
    id "org.springframework.boot" version "2.7.3"
    id "io.spring.dependency-management" version "1.0.13.RELEASE"
}

version "0.1"
group "no.nav.cv.eures"
sourceCompatibility = '1.17'

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://github-package-registry-mirror.gc.nav.no/cached/maven-release" }
    maven { url "https://packages.confluent.io/maven"}
}


configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "javax.annotation:javax.annotation-api"
    implementation "org.apache.avro:avro:${avroVersion}"
    implementation "net.logstash.logback:logstash-logback-encoder:7.2"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"

    implementation "no.nav.arbeid.pam:pam-cv-avro-cvmeldinger:52"

    // SNYK fixes
    //implementation "org.dom4j:dom4j:2.1.3"
    implementation "org.postgresql:postgresql:42.2.13"
    implementation 'org.hibernate:hibernate-core'

    implementation "org.springframework.kafka:spring-kafka"
    implementation "org.projectreactor:reactor-spring:1.0.1.RELEASE"

    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
            {exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'}

    implementation("org.springframework.boot:spring-boot-starter-validation")
            {exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'}

    implementation('org.springframework.boot:spring-boot-starter-webflux')
            {exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'}

    implementation("org.springframework.boot:spring-boot-starter-web")
            {exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'}

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    implementation('org.springframework.boot:spring-boot-starter-actuator')
            {exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'}
    implementation 'io.micrometer:micrometer-registry-prometheus:1.9.3'

    implementation 'io.confluent:kafka-avro-serializer:5.3.0'

    implementation "no.nav.security:token-validation-spring:${tokenSupportVersion}"
    implementation "net.minidev:json-smart:2.3"

    implementation "org.flywaydb:flyway-core"

    implementation 'no.nav.security:token-client-core:1.3.9'
    implementation 'no.nav.security:token-client-spring:1.3.9'

    runtimeOnly 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.11'

    //testImplementation "org.junit.jupiter:junit-jupiter:5.6.2"
    testImplementation "com.h2database:h2"
    //testImplementation 'org.mockito:mockito-core:3.5.13'
    testImplementation "no.nav.security:token-validation-spring-test:${tokenSupportVersion}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.9"

}

test.classpath += configurations.developmentOnly

mainClassName = "no.nav.cv.eures.ApplicationKt"

test {
    useJUnitPlatform()
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '17'
	    //Will retain parameter names for Java reflection
	    javaParameters = true
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '17'
	    javaParameters = true
	}
}

tasks.withType(JavaExec) {
    classpath += test.classpath
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}
