server:
  port: 9030
  servlet:
    context-path: /pam-eures-cv-eksport

no.nav.security.jwt:
  issuers: selvbetjening
  issuer:
    selvbetjening:
      discoveryurl: ${LOGINSERVICE_IDPORTEN_DISCOVERY_URL:http://metadata}
      accepted_audience: ${LOGINSERVICE_IDPORTEN_AUDIENCE:aud-localhost}
      cookie_name: selvbetjening-idtoken

spring:
  kafka:
    ssl:
      trust-store-location: file:${NAV_TRUSTSTORE_PATH}
      trust-store-password: ${NAV_TRUSTSTORE_PASSWORD}
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: pam-eures-cv-eksport-v3
      auto-offset-reset: earliest
      enable-auto-commit: true
      # client-id: ${CONSUMER_CLIENTID}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    properties:
      sasl:
        mechanism: PLAIN
        jaas:
          config: no.nav.cv.eures.cv.NaisLoginModule required;
      schema:
        registry:
          url: https://${KAFKA_SCHEMA_REGISTRY:localhost:8081}
      security:
        protocol: SASL_SSL
  datasource:
    driver-class-name: ${DB_DRIVER:org.postgresql.Driver}
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:test_db}
    username: ${DB_USERNAME:testuser}
    password: ${DB_PASSWORD:testpassword}
    hikari:
      maximum-pool-size: 2
      minimum-idle: 0
      pool-name: default
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations:
      - "classpath:db"

kafka:
  topics:
    consumers:
      cv_endret: ${KAFKA_CONSUMER_TOPIC_CV_ENDRET:arbeid-pam-cv-endret-v2-dev}
      # config: 'org.apache.kafka.common.security.plain.PlainLoginModule required username=${KAFKA_SERVICE_USER} password=${KAFKA_SERVICE_PASSWORD};'

avro:
  schema.subject: ${KAFKA_CONSUMER_TOPIC_CV_ENDRET:arbeid-pam-cv-endret-v2-dev}-value

jackson:
  serializationInclusion: ALWAYS

eures:
  # base 64 encoded version of default value of token below - for use in local testing with curl or postman or similar:
  # RVVSRVMgc3VwZXIgdGVzdHNlY3JldA==
  token: ${EURES_TOKEN:EURES super testsecret}
